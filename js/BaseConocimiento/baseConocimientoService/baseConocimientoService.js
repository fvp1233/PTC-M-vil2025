// Se importan las funciones 'fetchWithAuth' y 'getUserId' desde el servicio de autenticaci√≥n.
// 'fetchWithAuth' es una envoltura de 'fetch' que incluye el token de autenticaci√≥n.
// 'getUserId' es una funci√≥n para obtener el ID del usuario actual.
import { fetchWithAuth, getUserId } from '../../Login/AuthService/authService.js';

// Se define una constante para la URL base de la API, apuntando a un servidor local.
const API_URL = 'http://localhost:8080/api';

// Se exporta un mapa de categor√≠as para asociar los IDs num√©ricos con sus nombres descriptivos.
// Esto facilita la conversi√≥n de IDs a nombres legibles en la interfaz de usuario.
export const categoryMap = {
    1: 'Soporte t√©cnico',
    2: 'Consultas',
    3: 'Gesti√≥n de usuarios',
    4: 'Redes',
    5: 'Incidentes cr√≠ticos'
};

/**
 * Funci√≥n as√≠ncrona que obtiene las soluciones de la API.
 * Se usan par√°metros por defecto para la paginaci√≥n y el filtro de categor√≠a.
 * @param {number} page - El n√∫mero de p√°gina a obtener (basado en 0).
 * @param {number} size - El n√∫mero de elementos por p√°gina.
 * @param {number} categoryId - El ID de la categor√≠a para filtrar. Si es 0, se obtienen todas.
 */
export async function getSolutions(page = 0, size = 10, categoryId = 0) {
    let url = `${API_URL}/GetSolutions?page=${page}&size=${size}`;
    if (categoryId !== 0) {
        url += `&categoryId=${categoryId}`;
    }

    try {
        const data = await fetchWithAuth(url); // ya es JSON
        console.log("üì¶ JSON recibido en getSolutions:", data);
        return data;
    } catch (error) {
        console.error("‚ùå Error capturado en getSolutions:", error);
        throw error;
    }
}

/**
 * Funci√≥n as√≠ncrona para buscar soluciones por t√≠tulo.
 * @param {string} title - El t√©rmino de b√∫squeda del t√≠tulo.
 * @param {number} page - El n√∫mero de p√°gina (basado en 0).
 * @param {number} size - El tama√±o de la p√°gina.
 */
export async function searchSolutionsByTitle(value, page = 0, size = 10) {
    const url = `${API_URL}/searchSolution?title=${encodeURIComponent(value)}&page=${page}&size=${size}`;

    try {
        const data = await fetchWithAuth(url, { method: 'GET' });
        console.log("üîç Resultados de b√∫squeda recibidos:", data);
        return data;
    } catch (error) {
        console.error("‚ùå Error en la b√∫squeda:", error);
        throw error;
    }
}
